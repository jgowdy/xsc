FROM debian:bookworm

# Add deb-src repositories for downloading source packages
RUN echo "deb-src http://deb.debian.org/debian bookworm main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src http://deb.debian.org/debian-security/ bookworm-security main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb-src http://deb.debian.org/debian bookworm-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list

# Install comprehensive build dependencies
# This includes most common build tools needed for Debian packages
RUN apt-get update && apt-get install -y \
    build-essential \
    dpkg-dev \
    debhelper \
    devscripts \
    fakeroot \
    wget \
    ca-certificates \
    help2man \
    texinfo \
    gettext \
    po4a \
    autoconf \
    automake \
    libtool \
    pkg-config \
    bison \
    flex \
    gawk \
    perl \
    python3 \
    python3-dev \
    m4 \
    make \
    patch \
    xz-utils \
    gzip \
    bzip2 \
    file \
    git \
    quilt \
    dh-autoreconf \
    dh-exec \
    && rm -rf /var/lib/apt/lists/*

# Accept UID/GID as build arguments
ARG USER_UID=1000
ARG USER_GID=1000

# Create user with specified UID/GID (handling existing GID)
RUN (groupadd -g ${USER_GID} builder 2>/dev/null || groupmod -n builder $(getent group ${USER_GID} | cut -d: -f1)) && \
    useradd -m -u ${USER_UID} -g ${USER_GID} -s /bin/bash builder

# Set up build environment
ENV DEBIAN_FRONTEND=noninteractive
ENV DEB_BUILD_OPTIONS="parallel=40 nocheck nodoc"

# Create build directories with correct ownership
RUN mkdir -p /build/sources /build/results /build/logs && \
    chown -R builder:builder /build

# Switch to builder user
USER builder
WORKDIR /build

# Entry point will be the build script
CMD ["/bin/bash"]
